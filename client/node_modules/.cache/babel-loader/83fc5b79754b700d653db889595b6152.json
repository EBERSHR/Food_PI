{"ast":null,"code":"var _jsxFileName = \"/home/eber/Escritorio/Food/client/src/Components/Recipes.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getRecipes } from '../Redux/Actions';\nimport '../Styles/recipes.css'; // import { NavLink, useHistory } from 'react-router-dom';\n// import NameSearch from './NameSearch';\n\nimport PaginatorCard from './PaginatorCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Recipes = () => {\n  _s();\n\n  const recetas = useSelector(state => state.recipes);\n  const filtroAscendente = useSelector(state => state.ascendent); // console.log('FILTRO ASCENDENTE:::', filtroAscendente)\n\n  const dispatch = useDispatch();\n  const [datos, setDatos] = useState(-1);\n  const [mapeo, setMapeo] = useState(recetas);\n  const limite = 4;\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(limite);\n  const [paginado, setPaginado] = useState([]);\n\n  const pagination = () => {\n    setPaginado(recetas.slice(page, limit));\n  };\n\n  const handleBackwards = () => {\n    setPage(page - limite);\n    setLimit(limit - limite);\n\n    if (page < 0 && limit < limite) {\n      setPage(0);\n      setLimit(limite);\n    }\n\n    pagination();\n  };\n\n  const handleForewards = () => {\n    if (limit < recetas.length) {\n      setPage(limit);\n      setLimit(limit + limite);\n    }\n\n    pagination();\n  };\n\n  if (!pagination) {\n    pagination();\n  }\n\n  const handleFilterChange = e => {\n    //     console.log('en el switch', e.target.value)\n    switch (e.target.value) {\n      // Filtrar Asendente\n      case \"1\":\n        setPage(0);\n        setLimit(limite);\n        setPaginado(filtroAscendente.slice(page, limit)); // recetas.sort((a, b) => {\n        //     if (a.name < b.name) return -1;\n        //     if (a.name > b.name) return 1;\n        //     return 0;\n        // });\n        // dispatch(setFilters(recetas))\n        // setPaginado(\n        //     recetas.slice(0, 9)\n        // )\n        // history.push('/home');\n        // console.log('en el switch')\n        // let a = paginado;\n        // setPaginado([]);\n        // a.sort((a, b) => {\n        //     if (a.name < b.name) return -1;\n        //     if (a.name > b.name) return 1;\n        //     return 0;\n        // });\n        // console.log(a);\n        // setPaginado(a);\n        // history.push('/home');\n\n        break;\n      //         // Filtar Descendente    \n      //         case \"2\":\n      //             recetas.sort((a, b) => {\n      //                 if (a.name < b.name) return 1;\n      //                 if (a.name > b.name) return -1;\n      //                 return 0;\n      //             });\n      //             console.log(\"Descendentes:\", recetas);\n      //             dispatch(setFilters(recetas))\n      //             setPaginado(\n      //                 recetas.slice(0, 9)\n      //             )\n      //             // let d = paginado;\n      //             // setPaginado([]);\n      //             // d.sort((a, b) => {\n      //             //     if (a.name < b.name) return 1;\n      //             //     if (a.name > b.name) return -1;\n      //             //     return 0;\n      //             // });\n      //             // setPaginado(d);\n      //             // // history.push('/home');\n      //             break;\n      //             // Filtrar por Fuerza\n      //         case \"3\":\n      //             recetas.sort((a, b) => {\n      //                 if (a.strenght < b.strenght) return -1;\n      //                 if (a.strenght > b.strenght) return 1;\n      //                 return 0;\n      //             });\n      //             console.log(\"Fuerza:\", recetas);\n      //             dispatch(setFilters(recetas))\n      //             setPaginado(\n      //                 recetas.slice(0, 9)\n      //             )\n      //             // let f = paginado;\n      //             // setPaginado([]);\n      //             // f.sort((a, b) => {\n      //             //     if (a.strenght < b.strenght) return -1;\n      //             //     if (a.strenght > b.strenght) return 1;\n      //             //     return 0;\n      //             // });\n      //             // setPaginado(f);\n      //             // history.push('/home');\n      //             break;\n      //         // Filtrar por Pokemones Existentes    \n      //         case \"4\":\n      //             dispatch(getPokemones())\n      //             recetas.forEach(element => {\n      //                 if (typeof element.id === 'string') {\n      //                     existentes.push(element);\n      //                 } else {\n      //                     creados.push(element);\n      //                 }\n      //             });\n      //             console.log(\"Creados:\", existentes);\n      //             dispatch(setFilters(existentes))\n      //             break;\n      //         // Filtrar por Pokemones Creados\n      //         case \"5\":\n      //             dispatch(getPokemones())\n      //             recetas.forEach(element => {\n      //                 if (typeof element.id === 'string') {\n      //                     existentes.push(element);\n      //                 } else {\n      //                     creados.push(element);\n      //                 }\n      //             });\n      //             console.log(\"Existentes:\", creados);\n      //             dispatch(setFilters(creados))\n      //             history.push('/home');\n      //             break;\n      //         // Todos lo Pokemones\n      //         case 6:\n      //             dispatch(getPokemones())\n      //             setPaginado(\n      //                 recetas.slice(0, 9)\n      //             )\n      //             break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipesComponent\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"back\",\n        type: \"button\",\n        value: \"<<<\",\n        onClick: handleBackwards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"forward\",\n        type: \"button\",\n        value: \">>>\",\n        onClick: handleForewards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => {\n        handleFilterChange(e);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: -1,\n        children: \"Selecci\\xF2n de Filtros\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 1,\n        children: \"Ordenar Asendente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 2,\n        children: \"Ordenar Descendente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 3,\n        children: \"Filtrar por Fuerza\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 4,\n        children: \"Pokemones Existentes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 5,\n        children: \"Nuevo Pokemones Creados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 6,\n        children: \"Todos los Pokemones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paginator\",\n      children: paginado.map((re, index) => {\n        return /*#__PURE__*/_jsxDEV(PaginatorCard, {\n          name: re.name,\n          image: re.image\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Recipes, \"IQHdDQmPR7ch8Uw5CZ2hD7vfDKY=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Recipes;\nexport default Recipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"sources":["/home/eber/Escritorio/Food/client/src/Components/Recipes.jsx"],"names":["React","useState","useDispatch","useSelector","getRecipes","PaginatorCard","Recipes","recetas","state","recipes","filtroAscendente","ascendent","dispatch","datos","setDatos","mapeo","setMapeo","limite","page","setPage","limit","setLimit","paginado","setPaginado","pagination","slice","handleBackwards","handleForewards","length","handleFilterChange","e","target","value","map","re","index","name","image"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,uBAAP,C,CACA;AACA;;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElB,QAAMC,OAAO,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,OAAhB,CAA3B;AACA,QAAMC,gBAAgB,GAAGP,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACG,SAAhB,CAApC,CAHkB,CAIlB;;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAGA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,CAAC,CAAF,CAAlC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAACM,OAAD,CAAlC;AACA,QAAMU,MAAM,GAAG,CAAf;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAACgB,MAAD,CAAlC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC,EAAD,CAAxC;;AAIA,QAAMuB,UAAU,GAAG,MAAM;AACrBD,IAAAA,WAAW,CACPhB,OAAO,CAACkB,KAAR,CAAcP,IAAd,EAAoBE,KAApB,CADO,CAAX;AAIH,GALD;;AAOA,QAAMM,eAAe,GAAG,MAAM;AAC1BP,IAAAA,OAAO,CAACD,IAAI,GAAGD,MAAR,CAAP;AACAI,IAAAA,QAAQ,CAACD,KAAK,GAAGH,MAAT,CAAR;;AACA,QAAIC,IAAI,GAAG,CAAP,IAAYE,KAAK,GAAGH,MAAxB,EAAgC;AAC5BE,MAAAA,OAAO,CAAC,CAAD,CAAP;AACAE,MAAAA,QAAQ,CAACJ,MAAD,CAAR;AACH;;AACDO,IAAAA,UAAU;AACb,GARD;;AAUA,QAAMG,eAAe,GAAG,MAAM;AAC1B,QAAIP,KAAK,GAAGb,OAAO,CAACqB,MAApB,EAA4B;AACxBT,MAAAA,OAAO,CAACC,KAAD,CAAP;AACAC,MAAAA,QAAQ,CAACD,KAAK,GAAGH,MAAT,CAAR;AACH;;AACDO,IAAAA,UAAU;AAEb,GAPD;;AASA,MAAI,CAACA,UAAL,EAAiB;AACbA,IAAAA,UAAU;AAEb;;AAID,QAAMK,kBAAkB,GAAIC,CAAD,IAAO;AAClC;AAEI,YAAQA,CAAC,CAACC,MAAF,CAASC,KAAjB;AACI;AACA,WAAK,GAAL;AACIb,QAAAA,OAAO,CAAC,CAAD,CAAP;AACAE,QAAAA,QAAQ,CAACJ,MAAD,CAAR;AACAM,QAAAA,WAAW,CACPb,gBAAgB,CAACe,KAAjB,CAAuBP,IAAvB,EAA6BE,KAA7B,CADO,CAAX,CAHJ,CAQI;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACZ;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ;AACI;AAzHR;AA2HH,GA9HD;;AAgIA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACgB;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACR;AAAO,QAAA,SAAS,EAAC,MAAjB;AAAwB,QAAA,IAAI,EAAC,QAA7B;AAAsC,QAAA,KAAK,EAAC,KAA5C;AAAkD,QAAA,OAAO,EAAEM;AAA3D;AAAA;AAAA;AAAA;AAAA,cADQ,eAER;AAAO,QAAA,SAAS,EAAC,SAAjB;AAA2B,QAAA,IAAI,EAAC,QAAhC;AAAyC,QAAA,KAAK,EAAC,KAA/C;AAAqD,QAAA,OAAO,EAAEC;AAA9D;AAAA;AAAA;AAAA;AAAA,cAFQ;AAAA;AAAA;AAAA;AAAA;AAAA,YADhB,eAKgB;AAAQ,MAAA,QAAQ,EAAEG,CAAC,IAAI;AAAED,QAAAA,kBAAkB,CAACC,CAAD,CAAlB;AAAuB,OAAhD;AAAA,8BACR;AAAQ,QAAA,KAAK,EAAE,CAAC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,eAER;AAAQ,QAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFQ,eAGR;AAAQ,QAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHQ,eAIR;AAAQ,QAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJQ,eAKR;AAAQ,QAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALQ,eAMR;AAAQ,QAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANQ,eAOR;AAAQ,QAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPQ;AAAA;AAAA;AAAA;AAAA;AAAA,YALhB,eAcA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBAEQR,QAAQ,CAACW,GAAT,CAAa,CAACC,EAAD,EAAKC,KAAL,KAAe;AACxB,4BACI,QAAC,aAAD;AAEI,UAAA,IAAI,EAAED,EAAE,CAACE,IAFb;AAGI,UAAA,KAAK,EAAEF,EAAE,CAACG;AAHd,WACSF,KADT;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OARD;AAFR;AAAA;AAAA;AAAA;AAAA,YAdA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CAhND;;GAAM7B,O;UAEcH,W,EACSA,W,EAERD,W;;;KALfI,O;AAkNN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getRecipes } from '../Redux/Actions';\nimport '../Styles/recipes.css'\n// import { NavLink, useHistory } from 'react-router-dom';\n// import NameSearch from './NameSearch';\nimport PaginatorCard from './PaginatorCard';\n\nconst Recipes = () => {\n\n    const recetas = useSelector(state => state.recipes);\n    const filtroAscendente = useSelector(state => state.ascendent);\n    // console.log('FILTRO ASCENDENTE:::', filtroAscendente)\n    const dispatch = useDispatch();\n\n\n    const [datos, setDatos] = useState(-1);\n    const [mapeo, setMapeo] = useState(recetas);\n    const limite = 4;\n    const [page, setPage] = useState(0);\n    const [limit, setLimit] = useState(limite);\n    const [paginado, setPaginado] = useState([]);\n\n\n\n    const pagination = () => {\n        setPaginado(\n            recetas.slice(page, limit)\n        )\n\n    }\n\n    const handleBackwards = () => {\n        setPage(page - limite)\n        setLimit(limit - limite)\n        if (page < 0 && limit < limite) {\n            setPage(0);\n            setLimit(limite);\n        }\n        pagination();\n    }\n\n    const handleForewards = () => {\n        if (limit < recetas.length) {\n            setPage(limit)\n            setLimit(limit + limite)\n        }\n        pagination();\n\n    }\n\n    if (!pagination) {\n        pagination();\n\n    }\n\n\n\n    const handleFilterChange = (e) => {\n    //     console.log('en el switch', e.target.value)\n\n        switch (e.target.value) {\n            // Filtrar Asendente\n            case \"1\":\n                setPage(0);\n                setLimit(limite);\n                setPaginado(\n                    filtroAscendente.slice(page, limit)\n                )\n            \n\n                // recetas.sort((a, b) => {\n                //     if (a.name < b.name) return -1;\n                //     if (a.name > b.name) return 1;\n                //     return 0;\n                // });\n\n                // dispatch(setFilters(recetas))\n                // setPaginado(\n                //     recetas.slice(0, 9)\n                // )\n                // history.push('/home');\n\n                // console.log('en el switch')\n                // let a = paginado;\n                // setPaginado([]);\n\n                // a.sort((a, b) => {\n                //     if (a.name < b.name) return -1;\n                //     if (a.name > b.name) return 1;\n                //     return 0;\n                // });\n\n                // console.log(a);\n                // setPaginado(a);\n                // history.push('/home');\n                break;\n    //         // Filtar Descendente    \n    //         case \"2\":\n\n    //             recetas.sort((a, b) => {\n    //                 if (a.name < b.name) return 1;\n    //                 if (a.name > b.name) return -1;\n    //                 return 0;\n    //             });\n\n    //             console.log(\"Descendentes:\", recetas);\n    //             dispatch(setFilters(recetas))\n    //             setPaginado(\n    //                 recetas.slice(0, 9)\n    //             )\n    //             // let d = paginado;\n    //             // setPaginado([]);\n    //             // d.sort((a, b) => {\n    //             //     if (a.name < b.name) return 1;\n    //             //     if (a.name > b.name) return -1;\n    //             //     return 0;\n    //             // });\n    //             // setPaginado(d);\n    //             // // history.push('/home');\n    //             break;\n    //             // Filtrar por Fuerza\n    //         case \"3\":\n\n\n    //             recetas.sort((a, b) => {\n    //                 if (a.strenght < b.strenght) return -1;\n    //                 if (a.strenght > b.strenght) return 1;\n    //                 return 0;\n    //             });\n\n    //             console.log(\"Fuerza:\", recetas);\n    //             dispatch(setFilters(recetas))\n    //             setPaginado(\n    //                 recetas.slice(0, 9)\n    //             )\n    //             // let f = paginado;\n    //             // setPaginado([]);\n    //             // f.sort((a, b) => {\n    //             //     if (a.strenght < b.strenght) return -1;\n    //             //     if (a.strenght > b.strenght) return 1;\n    //             //     return 0;\n    //             // });\n    //             // setPaginado(f);\n    //             // history.push('/home');\n    //             break;\n    //         // Filtrar por Pokemones Existentes    \n    //         case \"4\":\n    //             dispatch(getPokemones())\n    //             recetas.forEach(element => {\n    //                 if (typeof element.id === 'string') {\n    //                     existentes.push(element);\n    //                 } else {\n    //                     creados.push(element);\n    //                 }\n    //             });\n    //             console.log(\"Creados:\", existentes);\n    //             dispatch(setFilters(existentes))\n    //             break;\n    //         // Filtrar por Pokemones Creados\n    //         case \"5\":\n    //             dispatch(getPokemones())\n    //             recetas.forEach(element => {\n    //                 if (typeof element.id === 'string') {\n    //                     existentes.push(element);\n    //                 } else {\n    //                     creados.push(element);\n    //                 }\n    //             });\n    //             console.log(\"Existentes:\", creados);\n    //             dispatch(setFilters(creados))\n    //             history.push('/home');\n    //             break;\n    //         // Todos lo Pokemones\n    //         case 6:\n    //             dispatch(getPokemones())\n    //             setPaginado(\n    //                 recetas.slice(0, 9)\n    //             )\n    //             break;\n\n            default:\n                break;\n        }\n    }\n\n    return (\n        <div className=\"recipesComponent\">\n                        <div className=\"button-pagination\">\n                <input className=\"back\" type=\"button\" value=\"<<<\" onClick={handleBackwards} />\n                <input className=\"forward\" type=\"button\" value=\">>>\" onClick={handleForewards} />\n            </div>\n                        <select onChange={e => { handleFilterChange(e) }}>\n                <option value={-1}>Selecciòn de Filtros</option>\n                <option value={1} >Ordenar Asendente</option>\n                <option value={2} >Ordenar Descendente</option>\n                <option value={3} >Filtrar por Fuerza</option>\n                <option value={4} >Pokemones Existentes</option>\n                <option value={5} >Nuevo Pokemones Creados</option>\n                <option value={6} >Todos los Pokemones</option>\n            </select>\n        <div className=\"paginator\">\n            {\n                paginado.map((re, index) => {\n                    return (\n                        <PaginatorCard\n                            key={index}\n                            name={re.name}\n                            image={re.image} \n                        />\n                    )\n                })\n            }\n        </div>\n        </div>\n    );\n}\n\nexport default Recipes;\n"]},"metadata":{},"sourceType":"module"}