{"ast":null,"code":"import axios from 'axios';\nexport const GET_RECIPES = 'GET_RECIPES';\nexport const SET_FILTER_ASCENDENT = 'SET_FILTER_ASENDENT';\nexport const GET_RECIPES_BY_ID = 'GET_RECIPES_BY_ID'; // export const QUIT_POKEMONES_BY_ID = 'QUIT_POKEMONES_BY_ID';\n\nexport const CREATE_RECIPE = 'CREATE_RECIPE';\nexport const GET_ALL_TYPES = 'GET_ALL_TYPES'; // export const CREA_NEW_TYPE = 'CREA_NEW_TYPE'; \n// export const JOIN_POKEMON = 'JOIN_POKEMON';\n\nexport const SET_FILTERS = 'SET_FILTERS'; // export const GET_PK_BY_NAME = 'GET_PK_BY_NAME';\n// export function getPkByName(name) {\n//     return async dispatch => {\n//         return await axios.get(`http://localhost:3001/pokemons/searchName?name=${name}`)\n//         .then(response => dispatch({\n//             type: GET_PK_BY_NAME,\n//             payload: response.data\n//         }))\n//     }\n// }\n\nexport const setFilters = payload => {\n  return {\n    type: SET_FILTERS,\n    payload: payload\n  };\n}; // export const joinPokemon = (payload) => {\n//     return {\n//         type: JOIN_POKEMON,\n//         payload: payload\n//     }\n// }\n// export const creaNewType = (payload) => {\n//     return (dispatch) => {\n//         axios.post(\"http://localhost:3001/types/add\", payload)\n//         .then(response => {\n//             response = dispatch({\n//                 type: CREA_NEW_TYPE,\n//                 payload: payload\n//             })\n//         });\n//     }\n// }\n\nexport const getRecipes = payload => {\n  let allRecipes = [];\n  return async dispatch => {\n    return await axios.get(\"http://localhost:3001/recipes\").then(response => {\n      allRecipes = response.data;\n      console.log('RESPONSE.DATA::::', allRecipes);\n      dispatch({\n        type: GET_RECIPES,\n        payload: response.data\n      });\n    });\n  };\n}; // export const getPokemonesById = (id) => {\n//     return function (dispatch) {\n//         axios.get(`http://localhost:3001/pokemons/one/${id}`)\n//         .then(response => dispatch(\n//             {\n//                 type: GET_POKEMONES_BY_ID,\n//                 payload: response.data\n//             }\n//         ))\n//     }\n// }\n// export function quitPokemonesById(){\n//     return {\n//                 type: QUIT_POKEMONES_BY_ID, \n//                 payload:{}\n//              }    \n// }\n\nexport function createRecipe(payload) {\n  return async dispatch => {\n    dispatch({\n      type: CREATE_RECIPE\n    });\n    await axios.post('http://localhost:3001/recipes/add', payload).then(response => {\n      console.log(\"registrado correctamente\");\n      console.log(response);\n    });\n  };\n}\nexport function getAllTypes() {\n  return async dispatch => {\n    return await axios.get(\"http://localhost:3001/types\").then(response => dispatch({\n      type: GET_ALL_TYPES,\n      payload: response.data\n    }));\n  };\n}","map":{"version":3,"sources":["/home/eber/Escritorio/Food/client/src/Redux/Actions/index.js"],"names":["axios","GET_RECIPES","SET_FILTER_ASCENDENT","GET_RECIPES_BY_ID","CREATE_RECIPE","GET_ALL_TYPES","SET_FILTERS","setFilters","payload","type","getRecipes","allRecipes","dispatch","get","then","response","data","console","log","createRecipe","post","getAllTypes"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,oBAAoB,GAAG,qBAA7B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B,C,CACP;;AACA,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB,C,CAEP;AACA;;AACA,OAAO,MAAMC,WAAW,GAAG,aAApB,C,CACP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAAa;AACnC,SAAO;AACHC,IAAAA,IAAI,EAAEH,WADH;AAEHE,IAAAA,OAAO,EAAEA;AAFN,GAAP;AAIH,CALM,C,CAOP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAME,UAAU,GAAIF,OAAD,IAAa;AACnC,MAAIG,UAAU,GAAG,EAAjB;AACA,SAAO,MAAMC,QAAN,IAAkB;AACrB,WAAQ,MAAMZ,KAAK,CAACa,GAAN,CAAU,+BAAV,EACbC,IADa,CACRC,QAAQ,IAAI;AACdJ,MAAAA,UAAU,GAAGI,QAAQ,CAACC,IAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCP,UAAjC;AACAC,MAAAA,QAAQ,CAAC;AACTH,QAAAA,IAAI,EAAER,WADG;AAETO,QAAAA,OAAO,EAAEO,QAAQ,CAACC;AAFT,OAAD,CAAR;AAIP,KARiB,CAAd;AASH,GAVD;AAWH,CAbM,C,CAgBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASG,YAAT,CAAsBX,OAAtB,EAA8B;AACjC,SAAO,MAAOI,QAAP,IAAkB;AACrBA,IAAAA,QAAQ,CAAC;AACLH,MAAAA,IAAI,EAAEL;AADD,KAAD,CAAR;AAGA,UAAMJ,KAAK,CAACoB,IAAN,CAAW,mCAAX,EAAgDZ,OAAhD,EACLM,IADK,CACCC,QAAD,IAAY;AACdE,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACH,KAJK,CAAN;AAKH,GATD;AAWH;AAED,OAAO,SAASM,WAAT,GAAuB;AAC1B,SAAO,MAAMT,QAAN,IAAkB;AACrB,WAAQ,MAAMZ,KAAK,CAACa,GAAN,CAAU,6BAAV,EACbC,IADa,CACRC,QAAQ,IAAIH,QAAQ,CAAC;AACvBH,MAAAA,IAAI,EAAEJ,aADiB;AAEvBG,MAAAA,OAAO,EAAEO,QAAQ,CAACC;AAFK,KAAD,CADZ,CAAd;AAKH,GAND;AAOH","sourcesContent":["import axios from 'axios';\r\n\r\nexport const GET_RECIPES = 'GET_RECIPES';\r\nexport const SET_FILTER_ASCENDENT = 'SET_FILTER_ASENDENT';\r\nexport const GET_RECIPES_BY_ID = 'GET_RECIPES_BY_ID';\r\n// export const QUIT_POKEMONES_BY_ID = 'QUIT_POKEMONES_BY_ID';\r\nexport const CREATE_RECIPE = 'CREATE_RECIPE';\r\nexport const GET_ALL_TYPES = 'GET_ALL_TYPES';\r\n\r\n// export const CREA_NEW_TYPE = 'CREA_NEW_TYPE'; \r\n// export const JOIN_POKEMON = 'JOIN_POKEMON';\r\nexport const SET_FILTERS = 'SET_FILTERS';\r\n// export const GET_PK_BY_NAME = 'GET_PK_BY_NAME';\r\n\r\n// export function getPkByName(name) {\r\n//     return async dispatch => {\r\n//         return await axios.get(`http://localhost:3001/pokemons/searchName?name=${name}`)\r\n//         .then(response => dispatch({\r\n//             type: GET_PK_BY_NAME,\r\n//             payload: response.data\r\n//         }))\r\n//     }\r\n    \r\n// }\r\n\r\nexport const setFilters = (payload) => {\r\n    return {\r\n        type: SET_FILTERS,\r\n        payload: payload\r\n    }\r\n}\r\n\r\n// export const joinPokemon = (payload) => {\r\n//     return {\r\n//         type: JOIN_POKEMON,\r\n//         payload: payload\r\n//     }\r\n// }\r\n\r\n// export const creaNewType = (payload) => {\r\n//     return (dispatch) => {\r\n//         axios.post(\"http://localhost:3001/types/add\", payload)\r\n//         .then(response => {\r\n//             response = dispatch({\r\n//                 type: CREA_NEW_TYPE,\r\n//                 payload: payload\r\n//             })\r\n//         });\r\n//     }\r\n// }\r\n\r\nexport const getRecipes = (payload) => {\r\n    let allRecipes = [];\r\n    return async dispatch => {\r\n        return  await axios.get(\"http://localhost:3001/recipes\")\r\n        .then(response => {\r\n            allRecipes = response.data;\r\n            console.log('RESPONSE.DATA::::', allRecipes);\r\n            dispatch({\r\n            type: GET_RECIPES,\r\n            payload: response.data\r\n        })\r\n    })\r\n    }\r\n}\r\n\r\n\r\n// export const getPokemonesById = (id) => {\r\n//     return function (dispatch) {\r\n//         axios.get(`http://localhost:3001/pokemons/one/${id}`)\r\n//         .then(response => dispatch(\r\n//             {\r\n//                 type: GET_POKEMONES_BY_ID,\r\n//                 payload: response.data\r\n//             }\r\n//         ))\r\n//     }\r\n\r\n// }\r\n\r\n\r\n// export function quitPokemonesById(){\r\n//     return {\r\n//                 type: QUIT_POKEMONES_BY_ID, \r\n//                 payload:{}\r\n//              }    \r\n// }\r\n\r\nexport function createRecipe(payload){\r\n    return async (dispatch)=>{\r\n        dispatch({\r\n            type: CREATE_RECIPE\r\n        });\r\n        await axios.post('http://localhost:3001/recipes/add', payload)\r\n        .then((response)=>{\r\n            console.log(\"registrado correctamente\");\r\n            console.log(response);\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport function getAllTypes() {\r\n    return async dispatch => {\r\n        return  await axios.get(\"http://localhost:3001/types\")\r\n        .then(response => dispatch({\r\n            type: GET_ALL_TYPES,\r\n            payload: response.data\r\n        }))\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}